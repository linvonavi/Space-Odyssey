import os
import sys

import pygame
import requests

def resp(lon, lat, delta, type, m=''):

    api_server = "http://static-maps.yandex.ru/1.x/"


    params = {
        "ll": ",".join([lon, lat]),
        "spn": ",".join([delta, delta]),
        "l": type
    }
    if m != '':
        params['pt'] = str(m[0]) + ',' + str(m[1])
    response = requests.get(api_server, params=params)
    if not response:
        print("Ошибка выполнения запроса:")
        print(map_request)
        print("Http статус:", response.status_code, "(", response.reason, ")")
        sys.exit(1)

    # Запишем полученное изображение в файл.
    map_file = "map.png"
    with open(map_file, "wb") as file:
        file.write(response.content)
    return map_file

def g_resp(s):
    geocoder_request = "http://geocode-maps.yandex.ru/1.x/?apikey=40d1649f-0493-4b70-98ba-98533de7710b&geocode=" + s + "&format=json"
    
    # Выполняем запрос.
    response = requests.get(geocoder_request)
    if response:
        # Преобразуем ответ в json-объект
        json_response = response.json()
    
        # Получаем первый топоним из ответа геокодера.
        # Согласно описанию ответа, он находится по следующему пути:
        toponym = json_response["response"]["GeoObjectCollection"]["featureMember"][0]["GeoObject"]
        # Полный адрес топонима:
        toponym_address = toponym["metaDataProperty"]["GeocoderMetaData"]["text"]
        # Координаты центра топонима:
        toponym_coodrinates = toponym["Point"]["pos"]
        # Печатаем извлечённые из ответа поля:
        return toponym_coodrinates
    else:
        print("Ошибка выполнения запроса:")
        print(geocoder_request)
        print("Http статус:", response.status_code, "(", response.reason, ")")
        
lon = "135"
lat = "-0"
delta = "1"
type = 'sat'

pygame.init()
pygame.display.set_caption('Maps-API')
size = width, height = 700, 500
screen = pygame.display.set_mode(size)

map_file = resp(lon, lat, delta, type)
running = True
fps = 60
s = ''
s_a = 0
m = ''
clock = pygame.time.Clock()
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            if 610 < event.pos[0] < 690:
                if 300<event.pos[1]<330:
                    type = 'map'
                    map_file = resp(lon, lat, delta, type, m)
                if 350<event.pos[1]<380:
                    type = 'sat'
                    map_file = resp(lon, lat, delta, type, m)
                if 400<event.pos[1]<430:
                    type = 'sat,skl'
                    map_file = resp(lon, lat, delta, type, m)
            if 10 < event.pos[0] < 490 and 10 < event.pos[1] < 40:
                s_a = 1 - s_a
            if 500 < event.pos[0] < 590 and 10 < event.pos[1] < 40:
                r = g_resp(s).split()
                lon = r[0]
                lat = r[1]
                m = (lon, lat)
                map_file = resp(lon, lat, delta, type, m)
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_RETURN:
                r = g_resp(s).split()
                lon = r[0]
                lat = r[1]
                m = (lon, lat)
                map_file = resp(lon, lat, delta, type, m)
            elif event.key == pygame.K_BACKSPACE and len(s) > 0:
                s = s[:-1]
            elif event.unicode != '':
                s += event.unicode


    screen.fill((0, 0, 150))
    screen.blit(pygame.image.load(map_file), (0, 50))
    pygame.draw.rect(screen, (255, 255, 255), (610, 300, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (610, 350, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (610, 400, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (10, 10, 480, 30))
    pygame.draw.rect(screen, (255, 255, 255), (500, 10, 90, 30))
    if s_a == 1 and s == '':
        font = pygame.font.Font(None, 35)
        text = font.render('_', 1, (0, 0, 0))
        screen.blit(text, (12, 14))
    font = pygame.font.Font(None, 35)
    text = font.render(s, 1, (0, 0, 0))
    screen.blit(text, (12, 14))

    font = pygame.font.Font(None, 35)
    text = font.render('Поиск', 1, (255, 0, 0))
    screen.blit(text, (510, 14))
    font = pygame.font.Font(None, 35)
    text = font.render('схема', 1, (255, 0, 0))
    screen.blit(text, (615, 304))
    font = pygame.font.Font(None, 27)
    text = font.render('спутник', 1, (255, 0, 0))
    screen.blit(text, (615, 354))
    font = pygame.font.Font(None, 30)
    text = font.render('гибрид', 1, (255, 0, 0))
    screen.blit(text, (615, 404))
    pygame.display.flip()

    clock.tick(fps)
pygame.quit()

os.remove(map_file)

